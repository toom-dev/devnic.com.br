---
import { NormalizeCSS } from "@styles/normalize";
import { Global } from "@emotion/react";
import { PreviewPng } from "@static/images";
import { Header } from "@modules/Header";
import { Footer } from "@modules/Footer";
import MetaConfig from "./MetaConfig.astro";

import Analytics from '@vercel/analytics/astro';

import "@styles/tailwind/tailwind.output.css";
import "../styles/animations.css";

interface Props {
    title: string;
    description: string;
    overwritePreview?: string;
}

const { title, description, overwritePreview } = Astro.props;

// Structured Data para SEO
const structuredData = {
    "@context": "https://schema.org",
    "@graph": [
        {
            "@type": "Organization",
            "@id": "https://devnic.com.br/#organization",
            "name": "Devnic Web Solutions",
            "url": "https://devnic.com.br",
            "logo": "https://devnic.com.br/logo.png",
            "description": "Empresa especializada em consultoria de TI, transformação digital e segurança da informação com foco em resultados mensuráveis.",
            "address": {
                "@type": "PostalAddress",
                "addressCountry": "BR",
                "addressRegion": "SP"
            },
            "contactPoint": {
                "@type": "ContactPoint",
                "telephone": "+55-11-98926-6354",
                "contactType": "customer service",
                "availableLanguage": "Portuguese"
            },
            "sameAs": [
                "https://wa.me/5511989266354"
            ]
        },
        {
            "@type": "WebSite",
            "@id": "https://devnic.com.br/#website",
            "url": "https://devnic.com.br",
            "name": "Devnic - Consultoria em TI e Transformação Digital",
            "description": description,
            "publisher": {
                "@id": "https://devnic.com.br/#organization"
            },
            "inLanguage": "pt-BR"
        },
        {
            "@type": "LocalBusiness",
            "@id": "https://devnic.com.br/#localbusiness",
            "name": "Devnic Web Solutions",
            "description": "Consultoria em TI, infraestrutura e segurança para empresas que buscam eficiência e inovação",
            "url": "https://devnic.com.br",
            "telephone": "+55-11-98926-6354",
            "email": "suporte.devnic@gmail.com",
            "address": {
                "@type": "PostalAddress",
                "addressCountry": "BR",
                "addressRegion": "SP"
            },
            "geo": {
                "@type": "GeoCoordinates",
                "latitude": -23.5505,
                "longitude": -46.6333
            },
            "priceRange": "$$",
            "serviceArea": {
                "@type": "Country",
                "name": "Brasil"
            }
        },
        {
            "@type": "Service",
            "name": "Consultoria em TI",
            "description": "Planejamento, gestão de infraestrutura, segurança da informação e otimização de processos",
            "provider": {
                "@id": "https://devnic.com.br/#organization"
            },
            "serviceType": "IT Consulting",
            "areaServed": "BR"
        }
    ]
};
---

<!doctype html>
<html lang="pt-BR">
    <head>
        <MetaConfig
            title={title}
            description={description}
            preview={overwritePreview ? overwritePreview : PreviewPng.src}
        />
        <title>{title}</title>

        <!-- Preconnect para performance -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        
        <!-- DNS Prefetch para recursos externos -->
        <link rel="dns-prefetch" href="//wa.me">
        <link rel="dns-prefetch" href="//api.whatsapp.com">
        
        <!-- Canonical URL -->
        <link rel="canonical" href="https://devnic.com.br">
        
        <!-- Structured Data -->
        <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
        
        <!-- Additional SEO tags -->
        <meta name="author" content="Devnic Web Solutions">
        <meta name="publisher" content="Devnic Web Solutions">
        <meta name="application-name" content="Devnic">
        <meta name="theme-color" content="#1e40af">
        
        <!-- Geo tags for local SEO -->
        <meta name="geo.region" content="BR-SP">
        <meta name="geo.placename" content="São Paulo, Brasil">
        <meta name="geo.position" content="-23.5505;-46.6333">
        <meta name="ICBM" content="-23.5505, -46.6333">
        
        <!-- Business tags -->
        <meta name="business:contact_data:phone" content="+55-11-98926-6354">
        <meta name="business:contact_data:email" content="suporte.devnic@gmail.com">
        <meta name="business:contact_data:website" content="https://devnic.com.br">

        <Global styles={NormalizeCSS} />

        <!-- Google Analytics -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-EBDZE154W3"></script>
        <script is:inline>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', 'G-EBDZE154W3');
        </script>
    </head>
    <body class="bg-primary text-secondary">
        <!-- Skip to main content for accessibility -->
        <a href="#main-content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-blue-600 text-white px-4 py-2 rounded z-50">
            Pular para o conteúdo principal
        </a>
        
        <!-- @ts-ignore -->
        <Header client:load />
        
        <main id="main-content">
            <slot />
        </main>
        
        <Footer />
        <Analytics />

        <script>
            // Enhanced animation system with intersection observer
            const animateOnScroll = () => {
                const elements = document.querySelectorAll("[data-animate]");
                if (elements.length === 0) return;
                
                const observer = new IntersectionObserver(
                    (entries) => {
                        entries.forEach((entry) => {
                            if (entry.isIntersecting) {
                                const element = entry.target;
                                
                                // Add fade-in animation if not already present
                                if (!element.classList.contains("animate-fadeInUp")) {
                                    element.classList.add("fade-in");
                                }
                                
                                // Add stagger effect to child elements
                                const children = element.querySelectorAll(".group, .grid > div, .flex > div");
                                children.forEach((child, index) => {
                                    setTimeout(() => {
                                        child.classList.add("fade-in");
                                    }, index * 100);
                                });
                                
                                // Unobserve after animation starts
                                observer.unobserve(element);
                            }
                        });
                    },
                    {
                        threshold: 0.15,
                        rootMargin: "50px 0px -50px 0px"
                    }
                );

                elements.forEach((element) => {
                    observer.observe(element);
                });
            };

            // Enable smooth scrolling globally
            document.documentElement.style.scrollBehavior = 'smooth';

            // Initialize animations
            document.addEventListener("DOMContentLoaded", animateOnScroll);
            window.addEventListener("load", animateOnScroll);
            
            // Google Analytics configured in head
        </script>
    </body>
</html>
